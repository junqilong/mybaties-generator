<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.hll.mapper.ContentMapper">
  <resultMap id="BaseResultMap" type="com.hll.model.Content">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="names" jdbcType="VARCHAR" property="names" />
    <result column="star" jdbcType="TINYINT" property="star" />
    <result column="content_type" jdbcType="VARCHAR" property="contentType" />
    <result column="package_name" jdbcType="VARCHAR" property="packageName" />
    <result column="deep_link" jdbcType="VARCHAR" property="deepLink" />
    <result column="website_url" jdbcType="VARCHAR" property="websiteUrl" />
    <result column="icon" jdbcType="VARCHAR" property="icon" />
    <result column="recommend_pic" jdbcType="VARCHAR" property="recommendPic" />
    <result column="language" jdbcType="VARCHAR" property="language" />
    <result column="languages" jdbcType="VARCHAR" property="languages" />
    <result column="age_range_id" jdbcType="INTEGER" property="ageRangeId" />
    <result column="status" jdbcType="INTEGER" property="status" />
    <result column="created_on" jdbcType="TIMESTAMP" property="createdOn" />
    <result column="created_by" jdbcType="INTEGER" property="createdBy" />
    <result column="updated_on" jdbcType="TIMESTAMP" property="updatedOn" />
    <result column="updated_by" jdbcType="INTEGER" property="updatedBy" />
    <result column="country_codes" jdbcType="VARCHAR" property="countryCodes" />
    <result column="age_range_ids" jdbcType="VARCHAR" property="ageRangeIds" />
    <result column="model_names" jdbcType="VARCHAR" property="modelNames" />
    <result column="version_codes" jdbcType="VARCHAR" property="versionCodes" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.hll.model.Content">
    <result column="extra" jdbcType="LONGVARCHAR" property="extra" />
    <result column="description" jdbcType="LONGVARCHAR" property="description" />
    <result column="source_url" jdbcType="LONGVARCHAR" property="sourceUrl" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, name, names, star, content_type, package_name, deep_link, website_url, icon, 
    recommend_pic, language, languages, age_range_id, status, created_on, created_by, 
    updated_on, updated_by, country_codes, age_range_ids, model_names, version_codes
  </sql>
  <sql id="Blob_Column_List">
    extra, description, source_url
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="com.hll.model.ContentExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from content
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="com.hll.model.ContentExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from content
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from content
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from content
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.hll.model.ContentExample">
    delete from content
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" keyColumn="id" keyProperty="id" parameterType="com.hll.model.Content" useGeneratedKeys="true">
    insert into content (name, names, star, 
      content_type, package_name, deep_link, 
      website_url, icon, recommend_pic, 
      language, languages, age_range_id, 
      status, created_on, created_by, 
      updated_on, updated_by, country_codes, 
      age_range_ids, model_names, version_codes, 
      extra, description, source_url
      )
    values (#{name,jdbcType=VARCHAR}, #{names,jdbcType=VARCHAR}, #{star,jdbcType=TINYINT}, 
      #{contentType,jdbcType=VARCHAR}, #{packageName,jdbcType=VARCHAR}, #{deepLink,jdbcType=VARCHAR}, 
      #{websiteUrl,jdbcType=VARCHAR}, #{icon,jdbcType=VARCHAR}, #{recommendPic,jdbcType=VARCHAR}, 
      #{language,jdbcType=VARCHAR}, #{languages,jdbcType=VARCHAR}, #{ageRangeId,jdbcType=INTEGER}, 
      #{status,jdbcType=INTEGER}, #{createdOn,jdbcType=TIMESTAMP}, #{createdBy,jdbcType=INTEGER}, 
      #{updatedOn,jdbcType=TIMESTAMP}, #{updatedBy,jdbcType=INTEGER}, #{countryCodes,jdbcType=VARCHAR}, 
      #{ageRangeIds,jdbcType=VARCHAR}, #{modelNames,jdbcType=VARCHAR}, #{versionCodes,jdbcType=VARCHAR}, 
      #{extra,jdbcType=LONGVARCHAR}, #{description,jdbcType=LONGVARCHAR}, #{sourceUrl,jdbcType=LONGVARCHAR}
      )
  </insert>
  <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="com.hll.model.Content" useGeneratedKeys="true">
    insert into content
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="name != null">
        name,
      </if>
      <if test="names != null">
        names,
      </if>
      <if test="star != null">
        star,
      </if>
      <if test="contentType != null">
        content_type,
      </if>
      <if test="packageName != null">
        package_name,
      </if>
      <if test="deepLink != null">
        deep_link,
      </if>
      <if test="websiteUrl != null">
        website_url,
      </if>
      <if test="icon != null">
        icon,
      </if>
      <if test="recommendPic != null">
        recommend_pic,
      </if>
      <if test="language != null">
        language,
      </if>
      <if test="languages != null">
        languages,
      </if>
      <if test="ageRangeId != null">
        age_range_id,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="createdOn != null">
        created_on,
      </if>
      <if test="createdBy != null">
        created_by,
      </if>
      <if test="updatedOn != null">
        updated_on,
      </if>
      <if test="updatedBy != null">
        updated_by,
      </if>
      <if test="countryCodes != null">
        country_codes,
      </if>
      <if test="ageRangeIds != null">
        age_range_ids,
      </if>
      <if test="modelNames != null">
        model_names,
      </if>
      <if test="versionCodes != null">
        version_codes,
      </if>
      <if test="extra != null">
        extra,
      </if>
      <if test="description != null">
        description,
      </if>
      <if test="sourceUrl != null">
        source_url,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="names != null">
        #{names,jdbcType=VARCHAR},
      </if>
      <if test="star != null">
        #{star,jdbcType=TINYINT},
      </if>
      <if test="contentType != null">
        #{contentType,jdbcType=VARCHAR},
      </if>
      <if test="packageName != null">
        #{packageName,jdbcType=VARCHAR},
      </if>
      <if test="deepLink != null">
        #{deepLink,jdbcType=VARCHAR},
      </if>
      <if test="websiteUrl != null">
        #{websiteUrl,jdbcType=VARCHAR},
      </if>
      <if test="icon != null">
        #{icon,jdbcType=VARCHAR},
      </if>
      <if test="recommendPic != null">
        #{recommendPic,jdbcType=VARCHAR},
      </if>
      <if test="language != null">
        #{language,jdbcType=VARCHAR},
      </if>
      <if test="languages != null">
        #{languages,jdbcType=VARCHAR},
      </if>
      <if test="ageRangeId != null">
        #{ageRangeId,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        #{status,jdbcType=INTEGER},
      </if>
      <if test="createdOn != null">
        #{createdOn,jdbcType=TIMESTAMP},
      </if>
      <if test="createdBy != null">
        #{createdBy,jdbcType=INTEGER},
      </if>
      <if test="updatedOn != null">
        #{updatedOn,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedBy != null">
        #{updatedBy,jdbcType=INTEGER},
      </if>
      <if test="countryCodes != null">
        #{countryCodes,jdbcType=VARCHAR},
      </if>
      <if test="ageRangeIds != null">
        #{ageRangeIds,jdbcType=VARCHAR},
      </if>
      <if test="modelNames != null">
        #{modelNames,jdbcType=VARCHAR},
      </if>
      <if test="versionCodes != null">
        #{versionCodes,jdbcType=VARCHAR},
      </if>
      <if test="extra != null">
        #{extra,jdbcType=LONGVARCHAR},
      </if>
      <if test="description != null">
        #{description,jdbcType=LONGVARCHAR},
      </if>
      <if test="sourceUrl != null">
        #{sourceUrl,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.hll.model.ContentExample" resultType="java.lang.Long">
    select count(*) from content
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update content
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.name != null">
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.names != null">
        names = #{record.names,jdbcType=VARCHAR},
      </if>
      <if test="record.star != null">
        star = #{record.star,jdbcType=TINYINT},
      </if>
      <if test="record.contentType != null">
        content_type = #{record.contentType,jdbcType=VARCHAR},
      </if>
      <if test="record.packageName != null">
        package_name = #{record.packageName,jdbcType=VARCHAR},
      </if>
      <if test="record.deepLink != null">
        deep_link = #{record.deepLink,jdbcType=VARCHAR},
      </if>
      <if test="record.websiteUrl != null">
        website_url = #{record.websiteUrl,jdbcType=VARCHAR},
      </if>
      <if test="record.icon != null">
        icon = #{record.icon,jdbcType=VARCHAR},
      </if>
      <if test="record.recommendPic != null">
        recommend_pic = #{record.recommendPic,jdbcType=VARCHAR},
      </if>
      <if test="record.language != null">
        language = #{record.language,jdbcType=VARCHAR},
      </if>
      <if test="record.languages != null">
        languages = #{record.languages,jdbcType=VARCHAR},
      </if>
      <if test="record.ageRangeId != null">
        age_range_id = #{record.ageRangeId,jdbcType=INTEGER},
      </if>
      <if test="record.status != null">
        status = #{record.status,jdbcType=INTEGER},
      </if>
      <if test="record.createdOn != null">
        created_on = #{record.createdOn,jdbcType=TIMESTAMP},
      </if>
      <if test="record.createdBy != null">
        created_by = #{record.createdBy,jdbcType=INTEGER},
      </if>
      <if test="record.updatedOn != null">
        updated_on = #{record.updatedOn,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updatedBy != null">
        updated_by = #{record.updatedBy,jdbcType=INTEGER},
      </if>
      <if test="record.countryCodes != null">
        country_codes = #{record.countryCodes,jdbcType=VARCHAR},
      </if>
      <if test="record.ageRangeIds != null">
        age_range_ids = #{record.ageRangeIds,jdbcType=VARCHAR},
      </if>
      <if test="record.modelNames != null">
        model_names = #{record.modelNames,jdbcType=VARCHAR},
      </if>
      <if test="record.versionCodes != null">
        version_codes = #{record.versionCodes,jdbcType=VARCHAR},
      </if>
      <if test="record.extra != null">
        extra = #{record.extra,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.description != null">
        description = #{record.description,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.sourceUrl != null">
        source_url = #{record.sourceUrl,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update content
    set id = #{record.id,jdbcType=BIGINT},
      name = #{record.name,jdbcType=VARCHAR},
      names = #{record.names,jdbcType=VARCHAR},
      star = #{record.star,jdbcType=TINYINT},
      content_type = #{record.contentType,jdbcType=VARCHAR},
      package_name = #{record.packageName,jdbcType=VARCHAR},
      deep_link = #{record.deepLink,jdbcType=VARCHAR},
      website_url = #{record.websiteUrl,jdbcType=VARCHAR},
      icon = #{record.icon,jdbcType=VARCHAR},
      recommend_pic = #{record.recommendPic,jdbcType=VARCHAR},
      language = #{record.language,jdbcType=VARCHAR},
      languages = #{record.languages,jdbcType=VARCHAR},
      age_range_id = #{record.ageRangeId,jdbcType=INTEGER},
      status = #{record.status,jdbcType=INTEGER},
      created_on = #{record.createdOn,jdbcType=TIMESTAMP},
      created_by = #{record.createdBy,jdbcType=INTEGER},
      updated_on = #{record.updatedOn,jdbcType=TIMESTAMP},
      updated_by = #{record.updatedBy,jdbcType=INTEGER},
      country_codes = #{record.countryCodes,jdbcType=VARCHAR},
      age_range_ids = #{record.ageRangeIds,jdbcType=VARCHAR},
      model_names = #{record.modelNames,jdbcType=VARCHAR},
      version_codes = #{record.versionCodes,jdbcType=VARCHAR},
      extra = #{record.extra,jdbcType=LONGVARCHAR},
      description = #{record.description,jdbcType=LONGVARCHAR},
      source_url = #{record.sourceUrl,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update content
    set id = #{record.id,jdbcType=BIGINT},
      name = #{record.name,jdbcType=VARCHAR},
      names = #{record.names,jdbcType=VARCHAR},
      star = #{record.star,jdbcType=TINYINT},
      content_type = #{record.contentType,jdbcType=VARCHAR},
      package_name = #{record.packageName,jdbcType=VARCHAR},
      deep_link = #{record.deepLink,jdbcType=VARCHAR},
      website_url = #{record.websiteUrl,jdbcType=VARCHAR},
      icon = #{record.icon,jdbcType=VARCHAR},
      recommend_pic = #{record.recommendPic,jdbcType=VARCHAR},
      language = #{record.language,jdbcType=VARCHAR},
      languages = #{record.languages,jdbcType=VARCHAR},
      age_range_id = #{record.ageRangeId,jdbcType=INTEGER},
      status = #{record.status,jdbcType=INTEGER},
      created_on = #{record.createdOn,jdbcType=TIMESTAMP},
      created_by = #{record.createdBy,jdbcType=INTEGER},
      updated_on = #{record.updatedOn,jdbcType=TIMESTAMP},
      updated_by = #{record.updatedBy,jdbcType=INTEGER},
      country_codes = #{record.countryCodes,jdbcType=VARCHAR},
      age_range_ids = #{record.ageRangeIds,jdbcType=VARCHAR},
      model_names = #{record.modelNames,jdbcType=VARCHAR},
      version_codes = #{record.versionCodes,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.hll.model.Content">
    update content
    <set>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="names != null">
        names = #{names,jdbcType=VARCHAR},
      </if>
      <if test="star != null">
        star = #{star,jdbcType=TINYINT},
      </if>
      <if test="contentType != null">
        content_type = #{contentType,jdbcType=VARCHAR},
      </if>
      <if test="packageName != null">
        package_name = #{packageName,jdbcType=VARCHAR},
      </if>
      <if test="deepLink != null">
        deep_link = #{deepLink,jdbcType=VARCHAR},
      </if>
      <if test="websiteUrl != null">
        website_url = #{websiteUrl,jdbcType=VARCHAR},
      </if>
      <if test="icon != null">
        icon = #{icon,jdbcType=VARCHAR},
      </if>
      <if test="recommendPic != null">
        recommend_pic = #{recommendPic,jdbcType=VARCHAR},
      </if>
      <if test="language != null">
        language = #{language,jdbcType=VARCHAR},
      </if>
      <if test="languages != null">
        languages = #{languages,jdbcType=VARCHAR},
      </if>
      <if test="ageRangeId != null">
        age_range_id = #{ageRangeId,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="createdOn != null">
        created_on = #{createdOn,jdbcType=TIMESTAMP},
      </if>
      <if test="createdBy != null">
        created_by = #{createdBy,jdbcType=INTEGER},
      </if>
      <if test="updatedOn != null">
        updated_on = #{updatedOn,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedBy != null">
        updated_by = #{updatedBy,jdbcType=INTEGER},
      </if>
      <if test="countryCodes != null">
        country_codes = #{countryCodes,jdbcType=VARCHAR},
      </if>
      <if test="ageRangeIds != null">
        age_range_ids = #{ageRangeIds,jdbcType=VARCHAR},
      </if>
      <if test="modelNames != null">
        model_names = #{modelNames,jdbcType=VARCHAR},
      </if>
      <if test="versionCodes != null">
        version_codes = #{versionCodes,jdbcType=VARCHAR},
      </if>
      <if test="extra != null">
        extra = #{extra,jdbcType=LONGVARCHAR},
      </if>
      <if test="description != null">
        description = #{description,jdbcType=LONGVARCHAR},
      </if>
      <if test="sourceUrl != null">
        source_url = #{sourceUrl,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.hll.model.Content">
    update content
    set name = #{name,jdbcType=VARCHAR},
      names = #{names,jdbcType=VARCHAR},
      star = #{star,jdbcType=TINYINT},
      content_type = #{contentType,jdbcType=VARCHAR},
      package_name = #{packageName,jdbcType=VARCHAR},
      deep_link = #{deepLink,jdbcType=VARCHAR},
      website_url = #{websiteUrl,jdbcType=VARCHAR},
      icon = #{icon,jdbcType=VARCHAR},
      recommend_pic = #{recommendPic,jdbcType=VARCHAR},
      language = #{language,jdbcType=VARCHAR},
      languages = #{languages,jdbcType=VARCHAR},
      age_range_id = #{ageRangeId,jdbcType=INTEGER},
      status = #{status,jdbcType=INTEGER},
      created_on = #{createdOn,jdbcType=TIMESTAMP},
      created_by = #{createdBy,jdbcType=INTEGER},
      updated_on = #{updatedOn,jdbcType=TIMESTAMP},
      updated_by = #{updatedBy,jdbcType=INTEGER},
      country_codes = #{countryCodes,jdbcType=VARCHAR},
      age_range_ids = #{ageRangeIds,jdbcType=VARCHAR},
      model_names = #{modelNames,jdbcType=VARCHAR},
      version_codes = #{versionCodes,jdbcType=VARCHAR},
      extra = #{extra,jdbcType=LONGVARCHAR},
      description = #{description,jdbcType=LONGVARCHAR},
      source_url = #{sourceUrl,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.hll.model.Content">
    update content
    set name = #{name,jdbcType=VARCHAR},
      names = #{names,jdbcType=VARCHAR},
      star = #{star,jdbcType=TINYINT},
      content_type = #{contentType,jdbcType=VARCHAR},
      package_name = #{packageName,jdbcType=VARCHAR},
      deep_link = #{deepLink,jdbcType=VARCHAR},
      website_url = #{websiteUrl,jdbcType=VARCHAR},
      icon = #{icon,jdbcType=VARCHAR},
      recommend_pic = #{recommendPic,jdbcType=VARCHAR},
      language = #{language,jdbcType=VARCHAR},
      languages = #{languages,jdbcType=VARCHAR},
      age_range_id = #{ageRangeId,jdbcType=INTEGER},
      status = #{status,jdbcType=INTEGER},
      created_on = #{createdOn,jdbcType=TIMESTAMP},
      created_by = #{createdBy,jdbcType=INTEGER},
      updated_on = #{updatedOn,jdbcType=TIMESTAMP},
      updated_by = #{updatedBy,jdbcType=INTEGER},
      country_codes = #{countryCodes,jdbcType=VARCHAR},
      age_range_ids = #{ageRangeIds,jdbcType=VARCHAR},
      model_names = #{modelNames,jdbcType=VARCHAR},
      version_codes = #{versionCodes,jdbcType=VARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>