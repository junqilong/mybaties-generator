<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.hll.mapper.TUpgradeMapper">
  <resultMap id="BaseResultMap" type="com.hll.model.TUpgrade">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="app_name" jdbcType="VARCHAR" property="appName" />
    <result column="apk_url" jdbcType="VARCHAR" property="apkUrl" />
    <result column="package_name" jdbcType="VARCHAR" property="packageName" />
    <result column="model_id" jdbcType="BIGINT" property="modelId" />
    <result column="model_name" jdbcType="VARCHAR" property="modelName" />
    <result column="version_id" jdbcType="BIGINT" property="versionId" />
    <result column="version_code" jdbcType="VARCHAR" property="versionCode" />
    <result column="version_name" jdbcType="VARCHAR" property="versionName" />
    <result column="size" jdbcType="DECIMAL" property="size" />
    <result column="upgrade_type" jdbcType="INTEGER" property="upgradeType" />
    <result column="upgrade_describe" jdbcType="VARCHAR" property="upgradeDescribe" />
    <result column="cover_version" jdbcType="VARCHAR" property="coverVersion" />
    <result column="release_status" jdbcType="INTEGER" property="releaseStatus" />
    <result column="release_date" jdbcType="TIMESTAMP" property="releaseDate" />
    <result column="status" jdbcType="INTEGER" property="status" />
    <result column="create_date" jdbcType="TIMESTAMP" property="createDate" />
    <result column="create_by" jdbcType="BIGINT" property="createBy" />
    <result column="update_date" jdbcType="TIMESTAMP" property="updateDate" />
    <result column="update_by" jdbcType="BIGINT" property="updateBy" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, app_name, apk_url, package_name, model_id, model_name, version_id, version_code, 
    version_name, size, upgrade_type, upgrade_describe, cover_version, release_status, 
    release_date, status, create_date, create_by, update_date, update_by
  </sql>
  <select id="selectByExample" parameterType="com.hll.model.TUpgradeExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from t_upgrade
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from t_upgrade
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from t_upgrade
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.hll.model.TUpgradeExample">
    delete from t_upgrade
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" keyColumn="id" keyProperty="id" parameterType="com.hll.model.TUpgrade" useGeneratedKeys="true">
    insert into t_upgrade (app_name, apk_url, package_name, 
      model_id, model_name, version_id, 
      version_code, version_name, size, 
      upgrade_type, upgrade_describe, cover_version, 
      release_status, release_date, status, 
      create_date, create_by, update_date, 
      update_by)
    values (#{appName,jdbcType=VARCHAR}, #{apkUrl,jdbcType=VARCHAR}, #{packageName,jdbcType=VARCHAR}, 
      #{modelId,jdbcType=BIGINT}, #{modelName,jdbcType=VARCHAR}, #{versionId,jdbcType=BIGINT}, 
      #{versionCode,jdbcType=VARCHAR}, #{versionName,jdbcType=VARCHAR}, #{size,jdbcType=DECIMAL}, 
      #{upgradeType,jdbcType=INTEGER}, #{upgradeDescribe,jdbcType=VARCHAR}, #{coverVersion,jdbcType=VARCHAR}, 
      #{releaseStatus,jdbcType=INTEGER}, #{releaseDate,jdbcType=TIMESTAMP}, #{status,jdbcType=INTEGER}, 
      #{createDate,jdbcType=TIMESTAMP}, #{createBy,jdbcType=BIGINT}, #{updateDate,jdbcType=TIMESTAMP}, 
      #{updateBy,jdbcType=BIGINT})
  </insert>
  <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="com.hll.model.TUpgrade" useGeneratedKeys="true">
    insert into t_upgrade
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="appName != null">
        app_name,
      </if>
      <if test="apkUrl != null">
        apk_url,
      </if>
      <if test="packageName != null">
        package_name,
      </if>
      <if test="modelId != null">
        model_id,
      </if>
      <if test="modelName != null">
        model_name,
      </if>
      <if test="versionId != null">
        version_id,
      </if>
      <if test="versionCode != null">
        version_code,
      </if>
      <if test="versionName != null">
        version_name,
      </if>
      <if test="size != null">
        size,
      </if>
      <if test="upgradeType != null">
        upgrade_type,
      </if>
      <if test="upgradeDescribe != null">
        upgrade_describe,
      </if>
      <if test="coverVersion != null">
        cover_version,
      </if>
      <if test="releaseStatus != null">
        release_status,
      </if>
      <if test="releaseDate != null">
        release_date,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="createDate != null">
        create_date,
      </if>
      <if test="createBy != null">
        create_by,
      </if>
      <if test="updateDate != null">
        update_date,
      </if>
      <if test="updateBy != null">
        update_by,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="appName != null">
        #{appName,jdbcType=VARCHAR},
      </if>
      <if test="apkUrl != null">
        #{apkUrl,jdbcType=VARCHAR},
      </if>
      <if test="packageName != null">
        #{packageName,jdbcType=VARCHAR},
      </if>
      <if test="modelId != null">
        #{modelId,jdbcType=BIGINT},
      </if>
      <if test="modelName != null">
        #{modelName,jdbcType=VARCHAR},
      </if>
      <if test="versionId != null">
        #{versionId,jdbcType=BIGINT},
      </if>
      <if test="versionCode != null">
        #{versionCode,jdbcType=VARCHAR},
      </if>
      <if test="versionName != null">
        #{versionName,jdbcType=VARCHAR},
      </if>
      <if test="size != null">
        #{size,jdbcType=DECIMAL},
      </if>
      <if test="upgradeType != null">
        #{upgradeType,jdbcType=INTEGER},
      </if>
      <if test="upgradeDescribe != null">
        #{upgradeDescribe,jdbcType=VARCHAR},
      </if>
      <if test="coverVersion != null">
        #{coverVersion,jdbcType=VARCHAR},
      </if>
      <if test="releaseStatus != null">
        #{releaseStatus,jdbcType=INTEGER},
      </if>
      <if test="releaseDate != null">
        #{releaseDate,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null">
        #{status,jdbcType=INTEGER},
      </if>
      <if test="createDate != null">
        #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="createBy != null">
        #{createBy,jdbcType=BIGINT},
      </if>
      <if test="updateDate != null">
        #{updateDate,jdbcType=TIMESTAMP},
      </if>
      <if test="updateBy != null">
        #{updateBy,jdbcType=BIGINT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.hll.model.TUpgradeExample" resultType="java.lang.Long">
    select count(*) from t_upgrade
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update t_upgrade
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.appName != null">
        app_name = #{record.appName,jdbcType=VARCHAR},
      </if>
      <if test="record.apkUrl != null">
        apk_url = #{record.apkUrl,jdbcType=VARCHAR},
      </if>
      <if test="record.packageName != null">
        package_name = #{record.packageName,jdbcType=VARCHAR},
      </if>
      <if test="record.modelId != null">
        model_id = #{record.modelId,jdbcType=BIGINT},
      </if>
      <if test="record.modelName != null">
        model_name = #{record.modelName,jdbcType=VARCHAR},
      </if>
      <if test="record.versionId != null">
        version_id = #{record.versionId,jdbcType=BIGINT},
      </if>
      <if test="record.versionCode != null">
        version_code = #{record.versionCode,jdbcType=VARCHAR},
      </if>
      <if test="record.versionName != null">
        version_name = #{record.versionName,jdbcType=VARCHAR},
      </if>
      <if test="record.size != null">
        size = #{record.size,jdbcType=DECIMAL},
      </if>
      <if test="record.upgradeType != null">
        upgrade_type = #{record.upgradeType,jdbcType=INTEGER},
      </if>
      <if test="record.upgradeDescribe != null">
        upgrade_describe = #{record.upgradeDescribe,jdbcType=VARCHAR},
      </if>
      <if test="record.coverVersion != null">
        cover_version = #{record.coverVersion,jdbcType=VARCHAR},
      </if>
      <if test="record.releaseStatus != null">
        release_status = #{record.releaseStatus,jdbcType=INTEGER},
      </if>
      <if test="record.releaseDate != null">
        release_date = #{record.releaseDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.status != null">
        status = #{record.status,jdbcType=INTEGER},
      </if>
      <if test="record.createDate != null">
        create_date = #{record.createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.createBy != null">
        create_by = #{record.createBy,jdbcType=BIGINT},
      </if>
      <if test="record.updateDate != null">
        update_date = #{record.updateDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateBy != null">
        update_by = #{record.updateBy,jdbcType=BIGINT},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update t_upgrade
    set id = #{record.id,jdbcType=BIGINT},
      app_name = #{record.appName,jdbcType=VARCHAR},
      apk_url = #{record.apkUrl,jdbcType=VARCHAR},
      package_name = #{record.packageName,jdbcType=VARCHAR},
      model_id = #{record.modelId,jdbcType=BIGINT},
      model_name = #{record.modelName,jdbcType=VARCHAR},
      version_id = #{record.versionId,jdbcType=BIGINT},
      version_code = #{record.versionCode,jdbcType=VARCHAR},
      version_name = #{record.versionName,jdbcType=VARCHAR},
      size = #{record.size,jdbcType=DECIMAL},
      upgrade_type = #{record.upgradeType,jdbcType=INTEGER},
      upgrade_describe = #{record.upgradeDescribe,jdbcType=VARCHAR},
      cover_version = #{record.coverVersion,jdbcType=VARCHAR},
      release_status = #{record.releaseStatus,jdbcType=INTEGER},
      release_date = #{record.releaseDate,jdbcType=TIMESTAMP},
      status = #{record.status,jdbcType=INTEGER},
      create_date = #{record.createDate,jdbcType=TIMESTAMP},
      create_by = #{record.createBy,jdbcType=BIGINT},
      update_date = #{record.updateDate,jdbcType=TIMESTAMP},
      update_by = #{record.updateBy,jdbcType=BIGINT}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.hll.model.TUpgrade">
    update t_upgrade
    <set>
      <if test="appName != null">
        app_name = #{appName,jdbcType=VARCHAR},
      </if>
      <if test="apkUrl != null">
        apk_url = #{apkUrl,jdbcType=VARCHAR},
      </if>
      <if test="packageName != null">
        package_name = #{packageName,jdbcType=VARCHAR},
      </if>
      <if test="modelId != null">
        model_id = #{modelId,jdbcType=BIGINT},
      </if>
      <if test="modelName != null">
        model_name = #{modelName,jdbcType=VARCHAR},
      </if>
      <if test="versionId != null">
        version_id = #{versionId,jdbcType=BIGINT},
      </if>
      <if test="versionCode != null">
        version_code = #{versionCode,jdbcType=VARCHAR},
      </if>
      <if test="versionName != null">
        version_name = #{versionName,jdbcType=VARCHAR},
      </if>
      <if test="size != null">
        size = #{size,jdbcType=DECIMAL},
      </if>
      <if test="upgradeType != null">
        upgrade_type = #{upgradeType,jdbcType=INTEGER},
      </if>
      <if test="upgradeDescribe != null">
        upgrade_describe = #{upgradeDescribe,jdbcType=VARCHAR},
      </if>
      <if test="coverVersion != null">
        cover_version = #{coverVersion,jdbcType=VARCHAR},
      </if>
      <if test="releaseStatus != null">
        release_status = #{releaseStatus,jdbcType=INTEGER},
      </if>
      <if test="releaseDate != null">
        release_date = #{releaseDate,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="createDate != null">
        create_date = #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="createBy != null">
        create_by = #{createBy,jdbcType=BIGINT},
      </if>
      <if test="updateDate != null">
        update_date = #{updateDate,jdbcType=TIMESTAMP},
      </if>
      <if test="updateBy != null">
        update_by = #{updateBy,jdbcType=BIGINT},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.hll.model.TUpgrade">
    update t_upgrade
    set app_name = #{appName,jdbcType=VARCHAR},
      apk_url = #{apkUrl,jdbcType=VARCHAR},
      package_name = #{packageName,jdbcType=VARCHAR},
      model_id = #{modelId,jdbcType=BIGINT},
      model_name = #{modelName,jdbcType=VARCHAR},
      version_id = #{versionId,jdbcType=BIGINT},
      version_code = #{versionCode,jdbcType=VARCHAR},
      version_name = #{versionName,jdbcType=VARCHAR},
      size = #{size,jdbcType=DECIMAL},
      upgrade_type = #{upgradeType,jdbcType=INTEGER},
      upgrade_describe = #{upgradeDescribe,jdbcType=VARCHAR},
      cover_version = #{coverVersion,jdbcType=VARCHAR},
      release_status = #{releaseStatus,jdbcType=INTEGER},
      release_date = #{releaseDate,jdbcType=TIMESTAMP},
      status = #{status,jdbcType=INTEGER},
      create_date = #{createDate,jdbcType=TIMESTAMP},
      create_by = #{createBy,jdbcType=BIGINT},
      update_date = #{updateDate,jdbcType=TIMESTAMP},
      update_by = #{updateBy,jdbcType=BIGINT}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>