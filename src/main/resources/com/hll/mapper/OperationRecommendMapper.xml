<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.hll.mapper.OperationRecommendMapper">
  <resultMap id="BaseResultMap" type="com.hll.model.OperationRecommend">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="languages" jdbcType="VARCHAR" property="languages" />
    <result column="age_range_ids" jdbcType="VARCHAR" property="ageRangeIds" />
    <result column="country_codes" jdbcType="VARCHAR" property="countryCodes" />
    <result column="model_names" jdbcType="VARCHAR" property="modelNames" />
    <result column="version_codes" jdbcType="VARCHAR" property="versionCodes" />
    <result column="sort" jdbcType="INTEGER" property="sort" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="content_ids" jdbcType="VARCHAR" property="contentIds" />
    <result column="status" jdbcType="TINYINT" property="status" />
    <result column="created_on" jdbcType="TIMESTAMP" property="createdOn" />
    <result column="created_by" jdbcType="SMALLINT" property="createdBy" />
    <result column="updated_on" jdbcType="TIMESTAMP" property="updatedOn" />
    <result column="updated_by" jdbcType="SMALLINT" property="updatedBy" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, languages, age_range_ids, country_codes, model_names, version_codes, sort, name, 
    content_ids, status, created_on, created_by, updated_on, updated_by
  </sql>
  <select id="selectByExample" parameterType="com.hll.model.OperationRecommendExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from operation_recommend
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from operation_recommend
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from operation_recommend
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.hll.model.OperationRecommendExample">
    delete from operation_recommend
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" keyColumn="id" keyProperty="id" parameterType="com.hll.model.OperationRecommend" useGeneratedKeys="true">
    insert into operation_recommend (languages, age_range_ids, country_codes, 
      model_names, version_codes, sort, 
      name, content_ids, status, 
      created_on, created_by, updated_on, 
      updated_by)
    values (#{languages,jdbcType=VARCHAR}, #{ageRangeIds,jdbcType=VARCHAR}, #{countryCodes,jdbcType=VARCHAR}, 
      #{modelNames,jdbcType=VARCHAR}, #{versionCodes,jdbcType=VARCHAR}, #{sort,jdbcType=INTEGER}, 
      #{name,jdbcType=VARCHAR}, #{contentIds,jdbcType=VARCHAR}, #{status,jdbcType=TINYINT}, 
      #{createdOn,jdbcType=TIMESTAMP}, #{createdBy,jdbcType=SMALLINT}, #{updatedOn,jdbcType=TIMESTAMP}, 
      #{updatedBy,jdbcType=SMALLINT})
  </insert>
  <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="com.hll.model.OperationRecommend" useGeneratedKeys="true">
    insert into operation_recommend
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="languages != null">
        languages,
      </if>
      <if test="ageRangeIds != null">
        age_range_ids,
      </if>
      <if test="countryCodes != null">
        country_codes,
      </if>
      <if test="modelNames != null">
        model_names,
      </if>
      <if test="versionCodes != null">
        version_codes,
      </if>
      <if test="sort != null">
        sort,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="contentIds != null">
        content_ids,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="createdOn != null">
        created_on,
      </if>
      <if test="createdBy != null">
        created_by,
      </if>
      <if test="updatedOn != null">
        updated_on,
      </if>
      <if test="updatedBy != null">
        updated_by,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="languages != null">
        #{languages,jdbcType=VARCHAR},
      </if>
      <if test="ageRangeIds != null">
        #{ageRangeIds,jdbcType=VARCHAR},
      </if>
      <if test="countryCodes != null">
        #{countryCodes,jdbcType=VARCHAR},
      </if>
      <if test="modelNames != null">
        #{modelNames,jdbcType=VARCHAR},
      </if>
      <if test="versionCodes != null">
        #{versionCodes,jdbcType=VARCHAR},
      </if>
      <if test="sort != null">
        #{sort,jdbcType=INTEGER},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="contentIds != null">
        #{contentIds,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        #{status,jdbcType=TINYINT},
      </if>
      <if test="createdOn != null">
        #{createdOn,jdbcType=TIMESTAMP},
      </if>
      <if test="createdBy != null">
        #{createdBy,jdbcType=SMALLINT},
      </if>
      <if test="updatedOn != null">
        #{updatedOn,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedBy != null">
        #{updatedBy,jdbcType=SMALLINT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.hll.model.OperationRecommendExample" resultType="java.lang.Long">
    select count(*) from operation_recommend
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update operation_recommend
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.languages != null">
        languages = #{record.languages,jdbcType=VARCHAR},
      </if>
      <if test="record.ageRangeIds != null">
        age_range_ids = #{record.ageRangeIds,jdbcType=VARCHAR},
      </if>
      <if test="record.countryCodes != null">
        country_codes = #{record.countryCodes,jdbcType=VARCHAR},
      </if>
      <if test="record.modelNames != null">
        model_names = #{record.modelNames,jdbcType=VARCHAR},
      </if>
      <if test="record.versionCodes != null">
        version_codes = #{record.versionCodes,jdbcType=VARCHAR},
      </if>
      <if test="record.sort != null">
        sort = #{record.sort,jdbcType=INTEGER},
      </if>
      <if test="record.name != null">
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.contentIds != null">
        content_ids = #{record.contentIds,jdbcType=VARCHAR},
      </if>
      <if test="record.status != null">
        status = #{record.status,jdbcType=TINYINT},
      </if>
      <if test="record.createdOn != null">
        created_on = #{record.createdOn,jdbcType=TIMESTAMP},
      </if>
      <if test="record.createdBy != null">
        created_by = #{record.createdBy,jdbcType=SMALLINT},
      </if>
      <if test="record.updatedOn != null">
        updated_on = #{record.updatedOn,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updatedBy != null">
        updated_by = #{record.updatedBy,jdbcType=SMALLINT},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update operation_recommend
    set id = #{record.id,jdbcType=INTEGER},
      languages = #{record.languages,jdbcType=VARCHAR},
      age_range_ids = #{record.ageRangeIds,jdbcType=VARCHAR},
      country_codes = #{record.countryCodes,jdbcType=VARCHAR},
      model_names = #{record.modelNames,jdbcType=VARCHAR},
      version_codes = #{record.versionCodes,jdbcType=VARCHAR},
      sort = #{record.sort,jdbcType=INTEGER},
      name = #{record.name,jdbcType=VARCHAR},
      content_ids = #{record.contentIds,jdbcType=VARCHAR},
      status = #{record.status,jdbcType=TINYINT},
      created_on = #{record.createdOn,jdbcType=TIMESTAMP},
      created_by = #{record.createdBy,jdbcType=SMALLINT},
      updated_on = #{record.updatedOn,jdbcType=TIMESTAMP},
      updated_by = #{record.updatedBy,jdbcType=SMALLINT}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.hll.model.OperationRecommend">
    update operation_recommend
    <set>
      <if test="languages != null">
        languages = #{languages,jdbcType=VARCHAR},
      </if>
      <if test="ageRangeIds != null">
        age_range_ids = #{ageRangeIds,jdbcType=VARCHAR},
      </if>
      <if test="countryCodes != null">
        country_codes = #{countryCodes,jdbcType=VARCHAR},
      </if>
      <if test="modelNames != null">
        model_names = #{modelNames,jdbcType=VARCHAR},
      </if>
      <if test="versionCodes != null">
        version_codes = #{versionCodes,jdbcType=VARCHAR},
      </if>
      <if test="sort != null">
        sort = #{sort,jdbcType=INTEGER},
      </if>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="contentIds != null">
        content_ids = #{contentIds,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=TINYINT},
      </if>
      <if test="createdOn != null">
        created_on = #{createdOn,jdbcType=TIMESTAMP},
      </if>
      <if test="createdBy != null">
        created_by = #{createdBy,jdbcType=SMALLINT},
      </if>
      <if test="updatedOn != null">
        updated_on = #{updatedOn,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedBy != null">
        updated_by = #{updatedBy,jdbcType=SMALLINT},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.hll.model.OperationRecommend">
    update operation_recommend
    set languages = #{languages,jdbcType=VARCHAR},
      age_range_ids = #{ageRangeIds,jdbcType=VARCHAR},
      country_codes = #{countryCodes,jdbcType=VARCHAR},
      model_names = #{modelNames,jdbcType=VARCHAR},
      version_codes = #{versionCodes,jdbcType=VARCHAR},
      sort = #{sort,jdbcType=INTEGER},
      name = #{name,jdbcType=VARCHAR},
      content_ids = #{contentIds,jdbcType=VARCHAR},
      status = #{status,jdbcType=TINYINT},
      created_on = #{createdOn,jdbcType=TIMESTAMP},
      created_by = #{createdBy,jdbcType=SMALLINT},
      updated_on = #{updatedOn,jdbcType=TIMESTAMP},
      updated_by = #{updatedBy,jdbcType=SMALLINT}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>